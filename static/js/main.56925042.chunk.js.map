{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXA8CeA,MAxCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAE/C,OACI,qBAAKC,UAAU,QAAf,SACI,eAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACHR,OACAC,QACAC,UACAC,SACAC,WAPR,UAWI,qBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACKD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACR,aAD6B,CAC7B,MAAgBR,UAAU,gBAA1B,SAA2CO,GAAlCC,QAGjB,oBAAGR,UAAU,iBAAb,UAA+BH,EAAQY,MAAM,EAAG,KAAhD,kBCgBLC,G,kNAvCXP,MAAQ,CACJQ,WAAW,EACXC,OAAQ,I,EAGZC,U,sBAAY,8BAAAC,EAAA,sEACqCC,IAAMC,IAAI,4DAD/C,gBACgBJ,EADhB,EACAK,KAAQA,KAAQL,OAExB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAH3B,2C,kEAQRQ,KAAKN,c,+BAGC,IAAD,EACyBM,KAAKhB,MAA3BQ,EADH,EACGA,UAAWC,EADd,EACcA,OAEnB,OACI,yBAASZ,UAAU,YAAnB,SACKW,EACG,qBAAKX,UAAU,SAAf,SACI,sBAAMA,UAAU,eAAhB,uBAGJ,qBAAKA,UAAU,SAAf,SACKY,EAAON,KAAI,SAAAc,GAAK,OACb,cAAC,EAAD,CAAsB1B,GAAI0B,EAAM1B,GAAIC,KAAMyB,EAAMzB,KAC5CC,MAAOwB,EAAMxB,MAAOC,QAASuB,EAAMvB,QACnCC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QAHNqB,EAAM1B,e,GA7B3B4B,IAAMC,Y,MCWVC,MAdf,SAAeC,GAGX,OAFAC,QAAQC,IAAIF,GAGR,sBAAKzB,UAAU,mBAAf,UACI,gJAIA,kECQG4B,E,kLAjBU,IAAD,EACcT,KAAKM,MAA3BI,EADQ,EACRA,SAAUC,EADF,EACEA,aAGKC,IAAnBF,EAAS1B,OACT2B,EAAQE,KAAK,O,+BAGX,IACEH,EAAaV,KAAKM,MAAlBI,SACR,OAAIA,EAAS1B,MACF,+BAAO0B,EAAS1B,MAAMP,QAEtB,S,GAdE0B,IAAMC,W,MCWZU,MATf,WACI,OACI,sBAAKjC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCYGiC,MAZf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,cAAC,IAAD,CAAOyB,KAAK,SAASE,UAAWb,IAChC,cAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWT,QCR1CU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56925042.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n// state가 필요 없으므로 function Component 사용\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n    // Link를 클릭하면 /movie-detail 페이지로 이동하면서, state 정보를 보냄\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link to={{\r\n                pathname: `/movie/${id}`,\r\n                state: {\r\n                    year,\r\n                    title,\r\n                    summary,\r\n                    poster,\r\n                    genres\r\n                }\r\n            }}>\r\n\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie__data\">\r\n                    <h3 className=\"movie__title\">{title}</h3>\r\n                    <h5 className=\"movie__year\">{year}</h5>\r\n                    <ul className=\"movie__genres\">\r\n                        {genres.map((genre, index) => (  // index: 인자 개수 index\r\n                            <li key={index} className=\"genres__genre\">{genre}</li>\r\n                        ))}\r\n                    </ul>\r\n                    <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n// Class Component\r\nclass Home extends React.Component {\r\n    state = {\r\n        isLoading: true,\r\n        movies: []\r\n    };\r\n\r\n    getMovies = async () => {   // async: 비동기 함수 getMovies()\r\n        const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        // axios.get()이 API로부터 데이터를 fetch 할 때까지 기다림\r\n        this.setState({ movies, isLoading: false });\r\n        // state 객체의 movies: movies\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies();\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, movies } = this.state;   // isLoading == this.state.isLoading\r\n\r\n        return (\r\n            <section className=\"container\">\r\n                {isLoading ?\r\n                    <div className=\"loader\">\r\n                        <span className=\"loader__text\">Loading</span>\r\n                    </div>\r\n                    :\r\n                    <div className=\"movies\">\r\n                        {movies.map(movie => (\r\n                            <Movie key={movie.id} id={movie.id} year={movie.year}\r\n                                title={movie.title} summary={movie.summary}\r\n                                poster={movie.medium_cover_image}\r\n                                genres={movie.genres} />\r\n                        ))}\r\n                    </div>\r\n                }\r\n            </section>);\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                “Freedom is the freedom to say that two plus two make four. If that is\r\n                granted, all else follows.”\r\n            </span>\r\n            <span>− George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n\r\n        // URL에 직접 \"/movie-detial\" 친 경우\r\n        if (location.state === undefined)\r\n            history.push(\"/\");  // Home URL로 이동\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location.state)\r\n            return <span>{location.state.title}</span>;\r\n        else\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      {/* id가 변수가 됨 */}\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\n// Component: App\n// JSX: JS와 HTML을 함께 사용하는 일종의 React 특화 개념 \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}